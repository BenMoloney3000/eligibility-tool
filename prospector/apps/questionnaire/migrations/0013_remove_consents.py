# Generated by Django 4.0.1 on 2022-02-24 16:58
from django.db import migrations
from django.db import models


def import_consents(apps, schema_editor):
    # take consents from external object into the Answers record
    Answers = apps.get_model("questionnaire", "Answers")
    ConsentGranted = apps.get_model("questionnaire", "ConsentGranted")

    for these_answers in Answers.objects.all():
        callback_granted = ConsentGranted.objects.filter(
            granted_for=these_answers, consent="CALLBACK"
        ).exists()
        future_schemes_granted = ConsentGranted.objects.filter(
            granted_for=these_answers, consent="RETAIN"
        ).exists()

        # If the user has entered the property type or selected an EPC we know they've
        # got past the consent point so there should be values in these field
        if (
            callback_granted
            or future_schemes_granted
            or these_answers.selected_epc
            or these_answers.property_type
        ):
            these_answers.consented_callback = callback_granted
            these_answers.consented_future_schemes = future_schemes_granted
            these_answers.save()


def export_consents(apps, schema_editor):
    # push consents from Answers record into external Consents records
    Answers = apps.get_model("questionnaire", "Answers")
    ConsentGranted = apps.get_model("questionnaire", "ConsentGranted")

    for these_answers in Answers.objects.all():
        if these_answers.consented_callback:
            ConsentGranted.objects.create(
                granted_for=these_answers,
                granted_at=these_answers.updated_at,
                consent="CALLBACK",
            )
        if these_answers.consented_future_schemes:
            ConsentGranted.objects.create(
                granted_for=these_answers,
                granted_at=these_answers.updated_at,
                consent="RETAIN",
            )


class Migration(migrations.Migration):

    dependencies = [
        ("questionnaire", "0012_add_heat_pump_field"),
    ]

    operations = [
        migrations.AddField(
            model_name="answers",
            name="consented_callback",
            field=models.BooleanField(
                blank=True,
                null=True,
                verbose_name="Respondent consented to being called / emailed back to provide advice",
            ),
        ),
        migrations.AddField(
            model_name="answers",
            name="consented_future_schemes",
            field=models.BooleanField(
                blank=True,
                null=True,
                verbose_name="Respondent consented to being contacted regarding relevant schemes in future.",
            ),
        ),
        migrations.RunPython(import_consents, export_consents),
        migrations.DeleteModel(
            name="ConsentGranted",
        ),
    ]
